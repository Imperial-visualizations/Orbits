{"remainingRequest":"/home/robert/Desktop/Visualisations2020/Orbits/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/robert/Desktop/Visualisations2020/Orbits/src/components/Orbits.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/robert/Desktop/Visualisations2020/Orbits/src/components/Orbits.vue","mtime":1597069692982},{"path":"/home/robert/Desktop/Visualisations2020/Orbits/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/robert/Desktop/Visualisations2020/Orbits/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/robert/Desktop/Visualisations2020/Orbits/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/robert/Desktop/Visualisations2020/Orbits/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Orbits.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA","file":"Orbits.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div id=\"parent\" style=\"height:100%;\" @mousemove=\"mouseOver\" @mouseleave=\"mouseLeave\" @mousedown=\"activateSelect\" @mouseup=\"cancelSelect\" @touchstart=\"touchOn\" @touchend=\"touchOff\" @touchmove=\"touchChange\">\r\n         <canvas id=\"canvas\" style=\"width:100%; height:100%\" ></canvas>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'iv-orbits',\r\n    props: {\r\n        mouse: {\r\n            default: {\r\n                x: undefined,\r\n                y: undefined\r\n            }\r\n        },\r\n        animationSpeed: {\r\n            default: 1\r\n        },\r\n        velocitySelect: {\r\n            default: false\r\n        },\r\n        sunRadius: {\r\n            default: 20\r\n        },\r\n        touchSelect: {\r\n            default: false\r\n        },\r\n        initialTouchPos:{\r\n            default: {\r\n                x: undefined,\r\n                y: undefined\r\n            }\r\n        },\r\n        currentTouchPos:{\r\n            default: {\r\n                x: undefined,\r\n                y: undefined\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        touchOn(event){\r\n            this.initialTouchPos.x = event.touches[0].pageX;\r\n            this.initialTouchPos.y = event.touches[0].pageY;\r\n            console.log('touchOn');\r\n        },\r\n        touchOff(){\r\n            this.touchSelect = false;\r\n            this.currentTouchPos.x = undefined;\r\n            this.currentTouchPos.y = undefined;\r\n            this.initialTouchPos.x = undefined;\r\n            this.initialTouchPos.y = undefined;\r\n            console.log('touchOff');\r\n        },\r\n        touchChange(event){\r\n            this.touchSelect = true;\r\n            this.currentTouchPos.x = event.touches[0].pageX;\r\n            this.currentTouchPos.y = event.touches[0].pageY;\r\n        },\r\n        mouseOver(event){\r\n            this.mouse.x = event.x;\r\n            this.mouse.y = event.y;\r\n        },\r\n        mouseLeave(){\r\n            this.mouse.x = undefined;\r\n            this.mouse.y = undefined;\r\n        },\r\n        activateSelect(){\r\n            this.velocitySelect = true;\r\n        },\r\n        cancelSelect(){\r\n            this.velocitySelect = false;\r\n        },\r\n    },\r\n    mounted(){\r\n        let vm = this;\r\n        let canvas = document.querySelector('canvas');\r\n        let parent = document.getElementById('parent');\r\n        let rect = parent.getBoundingClientRect();\r\n        let mouseX = null;\r\n        let mouseY = null;\r\n        let currentTouchX = null;\r\n        let currentTouchY = null;\r\n        let c = canvas.getContext('2d');\r\n        let scale = 1;\r\n\r\n\r\n        function resize(){\r\n            //console.log(scale, canvas.width, parent.offsetWidth*(1/scale));\r\n            canvas = document.querySelector('canvas');\r\n            parent = document.getElementById('parent');\r\n            rect = parent.getBoundingClientRect();\r\n            \r\n            canvas.width = parent.offsetWidth*(1/scale);\r\n            canvas.height = parent.offsetHeight*(1/scale);\r\n            console.log(canvas.width, canvas.height);\r\n            \r\n            //centre about x=0, y=0\r\n            c.translate(canvas.width/2, canvas.height/2);\r\n            \r\n            setTimeout(resize, 500);\r\n        }\r\n\r\n        resize();\r\n        setTimeout(resize, 100);\r\n         \r\n         \r\n\r\n        // let initialTouchX = this.initialTouchPos.x - rect.left;\r\n        // let initialTouchY = this.initialTouchPos.y - rect.top;\r\n        //windowResize();\r\n\r\n\r\n\r\n        function rotateShape(angle, centre, points){\r\n            //console.log(angle, centre, points);\r\n            for(let i = 0; i < points.length; i++){\r\n                points[i] = [points[i][0]*Math.cos(angle) - points[i][1]*Math.sin(angle), points[i][0]*Math.sin(angle) + points[i][1]*Math.cos(angle)];\r\n                points[i][0] = centre[0] + points[i][0];\r\n                points[i][1] = centre[1] + points[i][1];\r\n            }\r\n            return points;\r\n        }\r\n\r\n        \r\n        function Ball(x, y, defaultRadius, dx, dy) {\r\n            this.x = x;\r\n            this.y = y;\r\n            this.radius = defaultRadius;\r\n            this.pathIndex = 0;\r\n            this.velocitySelect = false;\r\n            this.touchInterface = false;\r\n            this.timeSinceClick = 10;\r\n            this.buttonStep = 0.1;\r\n            this.arrowConfirmed = false;\r\n            let newPath = false;\r\n\r\n            if(dx == undefined || dy == undefined){\r\n                            //make all orbit in circular orbits in same direction initially \r\n                this.dx = 0;\r\n                this.dy = 0;\r\n\r\n                for(let i = 0; i < massCentres.length; i++){  \r\n                    this.dist = Math.pow(Math.pow(this.x-massCentres[i][0] , 2) + Math.pow(this.y-massCentres[i][1], 2), 0.5);\r\n                    this.dy += -initialVel*massCentres[i][2]*Math.abs(Math.pow(this.dist , -2))*(massCentres[i][0]-this.x);\r\n                }\r\n                for(let i = 0; i < massCentres.length; i++){\r\n                    this.dist = Math.pow(Math.pow(this.x-massCentres[i][0] , 2) + Math.pow(this.y-massCentres[i][1], 2), 0.5);\r\n                    this.dx += initialVel*massCentres[i][2]*Math.abs(Math.pow(this.dist , -2))*(massCentres[i][1]-this.y);\r\n                }\r\n            } else {\r\n                this.dx = dx;\r\n                this.dy = dy;\r\n            }\r\n\r\n            this.pathEnergies = function(){\r\n                this.pathGravPot = [];\r\n                this.pathAngMom = [];\r\n                this.pathEffPot = [];\r\n                this.totE = 0;\r\n\r\n                for(let i = 0; i < this.pathCoords.length; i++){\r\n                    // Taking mass of orbiting object as 1\r\n                    this.dist = Math.pow(Math.pow(this.pathCoords[i][0]-massCentres[0][0] , 2) + Math.pow(this.pathCoords[i][1]-massCentres[0][1], 2), 0.5);\r\n                    this.pathGravPot.push(-initialVel*massCentres[0][2]/(this.dist*4*Math.PI));\r\n                    this.pathAngMom.push(Math.pow(Math.pow(this.pathVels[i][0],2) + Math.pow(this.pathVels[i][1],2),0.5) * this.dist /massCentres[0][2]);\r\n                    this.pathEffPot.push(this.pathGravPot[i] + this.pathAngMom[i]);\r\n                }\r\n\r\n                this.totE = 0.5*Math.pow(this.pathAngMom[0] ,2) + this.pathGravPot[0];\r\n                console.log('total energy = ',this.totE);\r\n                //this.totE = 0.5*(Math.pow(this.dx,2) + Math.pow(this.dy,2)) + massCentres[i][2]*Math.abs(this.dist, -1);\r\n                vm.$emit('energies', [this.pathAngMom, this.pathGravPot, this.pathEffPot,this.totE]);\r\n                console.log('emitted');\r\n                \r\n            }\r\n\r\n            this.path = function(dx, dy)  {\r\n                let currentPos = [this.x, this.y];\r\n                let currentVel = [this.dx, this.dy];\r\n                console.log(this.velocitySelect);\r\n                if(this.velocitySelect || newPath){\r\n                    if(isNaN(dx) || isNaN(dy)){\r\n                        currentVel = [this.x, this.y];\r\n                    } else {\r\n                        currentVel = [dx, dy];\r\n                    }\r\n                } else {      \r\n                    this.pathVels = [];\r\n                    this.pathCoords = [];\r\n                    this.scale = 1;\r\n                }\r\n                let iterations = 0;\r\n                this.newCoords = [];\r\n                this.newVels = [];\r\n                let stepSize = 1;\r\n                this.closedPath = true;\r\n                let reverseMultiplier = 1;\r\n                this.maxIterations = 20000;\r\n                console.log('path drawing');\r\n\r\n                while(Math.pow((Math.pow(this.x-currentPos[0], 2) + Math.pow(this.y-currentPos[1],2)),0.5) > 1 || iterations < 100){\r\n\r\n                    currentPos[0] += currentVel[0] * reverseMultiplier * stepSize;\r\n                    currentPos[1] += currentVel[1] * reverseMultiplier * stepSize;\r\n\r\n                    for(let i = 0; i < massCentres.length; i++){\r\n                        let dist = Math.pow(Math.pow(currentPos[0]-massCentres[i][0] , 2) + Math.pow(currentPos[1]-massCentres[i][1], 2), 0.5);\r\n\r\n                        currentVel[0] = currentVel[0] + reverseMultiplier * massCentres[i][2]*Math.abs(Math.pow(dist , -3))*(massCentres[i][0]-currentPos[0]);\r\n                        currentVel[1] = currentVel[1] + reverseMultiplier * massCentres[i][2]*Math.abs(Math.pow(dist , -3))*(massCentres[i][1]-currentPos[1]);\r\n                    }\r\n\r\n                    if (this.closedPath){\r\n                        if(this.velocitySelect || newPath){\r\n                            this.newCoords.push(currentPos.slice());\r\n                            this.newVels.push(currentVel.slice());\r\n                        } else{\r\n                            this.pathCoords.push(currentPos.slice());\r\n                            this.pathVels.push(currentVel.slice());\r\n                        }\r\n                    } else{\r\n                        if(this.velocitySelect || newPath){\r\n                            this.newCoords.unshift(currentPos.slice());\r\n                            this.newVels.unshift(currentVel.slice());\r\n                        } else{\r\n                            this.pathCoords.unshift(currentPos.slice());\r\n                            this.pathVels.unshift(currentVel.slice());\r\n                        }\r\n                    }\r\n\r\n                    iterations += 1;\r\n                    \r\n                    //Draw reverse path for open path\r\n                    if(iterations > this.maxIterations || Math.pow(Math.pow(currentPos[0],2) + Math.pow(currentPos[1],2),0.5) < vm.sunRadius){\r\n                        this.maxIterations = iterations;\r\n                        this.closedPath = false;\r\n                        if(this.velocitySelect || newPath){\r\n                            currentPos = [this.x, this.y];\r\n                            currentVel = [dx, dy];\r\n                        } else {\r\n                            currentPos = [this.x, this.y];\r\n                            currentVel = [this.dx, this.dy];\r\n                        }\r\n                        iterations = 0;\r\n                        \r\n                        if(reverseMultiplier < 0){\r\n                            break;\r\n                        }\r\n\r\n                        reverseMultiplier = -1;\r\n                        console.log('reverse');\r\n                    }\r\n\r\n                    this.pathEnergies;\r\n                }\r\n                \r\n                //Call scaling method\r\n                for(let i = 0; i < 5; i++){  \r\n                    this.scaleCanvas();\r\n                }\r\n                resize();\r\n                \r\n                newPath = false;\r\n                this.pathEnergies();\r\n            }\r\n\r\n            this.scaleCanvas = function() {\r\n                // Scaling\r\n                let maxX = this.pathCoords[0][0];\r\n                let maxY = this.pathCoords[0][1];\r\n                let minX = this.pathCoords[0][0];\r\n                let minY = this.pathCoords[0][1];\r\n\r\n                if(this.newCoords.length > 0){\r\n                    maxX = this.newCoords[0][0];\r\n                    maxY = this.newCoords[0][1];\r\n                    minX = this.newCoords[0][0];\r\n                    minY = this.newCoords[0][1];\r\n\r\n                    for (let i = 0; i < this.newCoords.length; i++) {\r\n                        let coord = this.newCoords[i]\r\n\r\n                        if (coord[0] > maxX) {\r\n                            maxX = coord[0];\r\n                        }\r\n                        else if (coord[0] < minX) {\r\n                            minX = coord[0];\r\n                        }\r\n\r\n                        if (coord[1] > maxY) {\r\n                            maxY = coord[1];\r\n                        }\r\n                        else if (coord[1] < minY) {\r\n                            minY = coord[1];\r\n                        }\r\n                    }\r\n                } else{\r\n                    maxX = this.pathCoords[0][0];\r\n                    maxY = this.pathCoords[0][1];\r\n                    minX = this.pathCoords[0][0];\r\n                    minY = this.pathCoords[0][1];\r\n\r\n                    for (let i = 0; i < this.pathCoords.length; i++) {\r\n                        let coord = this.pathCoords[i]\r\n\r\n                        if (coord[0] > maxX) {\r\n                            maxX = coord[0];\r\n                        }\r\n                        else if (coord[0] < minX) {\r\n                            minX = coord[0];\r\n                        }\r\n\r\n                        if (coord[1] > maxY) {\r\n                            maxY = coord[1];\r\n                        }\r\n                        else if (coord[1] < minY) {\r\n                            minY = coord[1];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if(maxX < canvas.width*(1/this.scale)/4 && maxY < canvas.height*(1/this.scale)/4 && minX > -canvas.width*(1/this.scale)/4 && minY > -canvas.height*(1/this.scale)/4){\r\n                    console.log('downsize', maxX, minX, canvas.width*(1/this.scale)/4, maxY, minY, canvas.height*(1/this.scale)/4);\r\n                    //unscale\r\n                    c.scale((1/this.scale), (1/this.scale));\r\n                    // c.translate(canvas.width/4, canvas.height/4);\r\n                    this.scale = this.scale*2;\r\n                    //c.scale(this.scale, this.scale); rescale done by resize()\r\n                }else if(maxX > canvas.width*(1/this.scale)/2 || maxY > canvas.height*(1/this.scale)/2 || minX < -canvas.width*(1/this.scale)/2 || minY < -canvas.height*(1/this.scale)/2){\r\n                    console.log('upsize', maxX, minX, canvas.width*(1/this.scale)/4, maxY, minY, canvas.height*(1/this.scale)/4);\r\n                    //unscale\r\n                    c.scale((1/this.scale), (1/this.scale));\r\n                    // c.translate(canvas.width/4, canvas.height/4);\r\n                    this.scale = this.scale/2;\r\n                    //c.scale(this.scale, this.scale); rescale done by resize()\r\n                }\r\n                \r\n                scale = this.scale;\r\n                resize();\r\n            }\r\n\r\n            this.draw = function() {\r\n                this.radius = defaultRadius*(1/this.scale);\r\n                let arrowOffset = this.radius*3;\r\n\r\n                c.beginPath();\r\n                c.moveTo(this.pathCoords[0][0], this.pathCoords[0][1]);\r\n                for(let i = 1; i < this.pathCoords.length; i++){\r\n                    c.lineTo(this.pathCoords[i][0], this.pathCoords[i][1]);\r\n                }\r\n                if(this.closedPath){\r\n                    c.lineTo(this.pathCoords[0][0], this.pathCoords[0][1]);\r\n                }\r\n                c.lineWidth = 2*(1/this.scale);\r\n                c.strokeStyle = \"black\";\r\n                c.stroke();\r\n\r\n                if(this.velocitySelect && this.newCoords.length > 0){\r\n                    c.beginPath();\r\n                    c.moveTo(this.newCoords[0][0], this.newCoords[0][1]);\r\n                    for(let i = 1; i < this.newCoords.length; i++){\r\n                        c.lineTo(this.newCoords[i][0], this.newCoords[i][1]);\r\n                    }\r\n                    if(this.closedPath){\r\n                        c.lineTo(this.newCoords[0][0], this.newCoords[0][1]);\r\n                    }\r\n                    c.lineWidth = 2*(1/this.scale);\r\n                    c.strokeStyle = \"blue\";\r\n                    c.stroke();\r\n                }\r\n\r\n                c.beginPath();\r\n                c.arc(this.x, this.y, this.radius, 0, 2*Math.PI);\r\n                c.fillStyle = 'rgb(0,0,255)';\r\n                c.fill();\r\n                \r\n                if(this.velocitySelect){\r\n                    c.beginPath();\r\n                    c.arc(this.x, this.y, this.radius*1.5, 0, 2*Math.PI);\r\n                    c.fillStyle = 'rgb(0,255,0)';\r\n                    c.fill();\r\n\r\n                    this.tanAngle = Math.atan2(this.pathCoords[this.pathIndex+1][1]- this.pathCoords[this.pathIndex-1][1], this.pathCoords[this.pathIndex+1][0]- this.pathCoords[this.pathIndex-1][0]);\r\n\r\n                    this.arrowCentres = [];\r\n                    for(let i = 0; i < 4; i++){\r\n                        this.arrowCentres.push([this.x + this.radius*4*Math.cos(this.tanAngle + i*Math.PI/2), this.y + this.radius*4*Math.sin(this.tanAngle + i*Math.PI/2)]);\r\n                    }\r\n\r\n                    this.tanPoints1 = rotateShape(this.tanAngle, [this.x, this.y], [[arrowOffset, this.radius], [this.radius*2+arrowOffset, this.radius], [this.radius*2+arrowOffset, this.radius*2], [this.radius*3+arrowOffset, 0],\r\n                    [this.radius*2+arrowOffset, -this.radius*2], [this.radius*2+arrowOffset, -this.radius], [arrowOffset, -this.radius]]);\r\n                    this.tanPoints2 = rotateShape(this.tanAngle + Math.PI, [this.x, this.y], [[arrowOffset, this.radius], [this.radius*2+arrowOffset, this.radius], [this.radius*2+arrowOffset, this.radius*2], [this.radius*3+arrowOffset, 0],\r\n                    [this.radius*2+arrowOffset, -this.radius*2], [this.radius*2+arrowOffset, -this.radius], [arrowOffset, -this.radius]]);\r\n                    this.rotPoints1 = rotateShape(this.tanAngle + Math.PI/2, [this.x, this.y], [[arrowOffset, this.radius], [this.radius*2+arrowOffset, this.radius], [this.radius*2+arrowOffset, this.radius*2], [this.radius*3+arrowOffset, 0],\r\n                    [this.radius*2+arrowOffset, -this.radius*2], [this.radius*2+arrowOffset, -this.radius], [arrowOffset, -this.radius]]);\r\n                    this.rotPoints2 = rotateShape(this.tanAngle + 3*Math.PI/2, [this.x, this.y], [[arrowOffset, this.radius], [this.radius*2+arrowOffset, this.radius], [this.radius*2+arrowOffset, this.radius*2], [this.radius*3+arrowOffset, 0],\r\n                    [this.radius*2+arrowOffset, -this.radius*2], [this.radius*2+arrowOffset, -this.radius], [arrowOffset, -this.radius]]);\r\n\r\n                    c.beginPath();\r\n                    c.moveTo(this.tanPoints1[0][0], this.tanPoints1[0][1]);\r\n                    for(let i = 1; i < this.tanPoints1.length; i++){\r\n                        c.lineTo(this.tanPoints1[i][0], this.tanPoints1[i][1]);\r\n                    }\r\n                    c.fillStyle = 'blue';\r\n                    c.fill();\r\n\r\n                    c.beginPath();\r\n                    c.moveTo(this.tanPoints2[0][0], this.tanPoints2[0][1]);\r\n                    for(let i = 1; i < this.tanPoints2.length; i++){\r\n                        c.lineTo(this.tanPoints2[i][0], this.tanPoints2[i][1]);\r\n                    }\r\n                    c.fillStyle = 'blue';\r\n                    c.fill();\r\n\r\n\r\n                    c.beginPath();\r\n                    c.moveTo(this.rotPoints1[0][0], this.rotPoints1[0][1]);\r\n                    for(let i = 1; i < this.rotPoints1.length; i++){\r\n                        c.lineTo(this.rotPoints1[i][0], this.rotPoints1[i][1]);\r\n                    }\r\n                    c.fillStyle = 'purple';\r\n                    c.fill();\r\n\r\n                    c.beginPath();\r\n                    c.moveTo(this.rotPoints2[0][0], this.rotPoints2[0][1]);\r\n                    for(let i = 1; i < this.rotPoints2.length; i++){\r\n                        c.lineTo(this.rotPoints2[i][0], this.rotPoints2[i][1]);\r\n                    }\r\n                    c.fillStyle = 'purple';\r\n                    c.fill();\r\n                }\r\n\r\n                if(vm.touchSelect){\r\n                    // let dispX = currentTouchX - initialTouchX;\r\n                    // let dispY = currentTouchY - initialTouchY;\r\n                    this.mag = Math.pow(Math.pow(currentTouchX- this.x, 2) + Math.pow(currentTouchY-this.y, 2), 0.5);\r\n                    if(this.mag > this.radius*20){\r\n                        this.mag = this.radius*20;\r\n                    }\r\n\r\n                    this.arrowAngle = Math.atan2(currentTouchY - this.y, currentTouchX - this.x);\r\n\r\n                    this.arrowPoints = rotateShape(this.arrowAngle, [this.x, this.y], [[0,0], [this.mag, this.radius*2], [this.mag, this.radius*6], [this.mag + this.radius*6, 0],[this.mag, -this.radius*6] ,[this.mag, -this.radius*2]]);\r\n\r\n                    c.beginPath();\r\n                    c.moveTo(this.x, this.y);\r\n                    for(let i = 0; i < this.arrowPoints.length; i++){\r\n                        c.lineTo(this.arrowPoints[i][0], this.arrowPoints[i][1]);\r\n                    }\r\n                    c.fillStyle = 'rgba(0, 255, 0, 0.7)';\r\n                    c.fill();\r\n\r\n                    this.arrowConfirmed = true;\r\n                }\r\n            }\r\n\r\n            this.update = function() {\r\n\r\n                this.timeSinceClick += 1; \r\n                this.draw();\r\n\r\n                if(this.pathIndex >= this.pathCoords.length){\r\n                    this.pathIndex=1;\r\n                }\r\n                \r\n                if(!this.velocitySelect && !vm.touchSelect){\r\n                    this.x = this.pathCoords[this.pathIndex][0];\r\n                    this.y = this.pathCoords[this.pathIndex][1];\r\n                    this.dx = this.pathVels[this.pathIndex][0];\r\n                    this.dy = this.pathVels[this.pathIndex][1];\r\n                    this.pathIndex += vm.animationSpeed;\r\n                }\r\n                \r\n                if(vm.velocitySelect && Math.pow((Math.pow((mouseX-this.x),2) + Math.pow((mouseY-this.y),2)),1/2) < this.radius*1.5 && this.timeSinceClick > 20){\r\n                    if(this.velocitySelect && this.newCoords.length > 0){\r\n                        this.pathCoords = this.newCoords;\r\n                        this.pathVels = this.newVels;\r\n                        this.newCoords = [];\r\n                        this.newVels = [];\r\n                        this.pathIndex = 1; \r\n                    }\r\n\r\n                    this.timeSinceClick = 0;\r\n                    this.velocitySelect = !this.velocitySelect;\r\n                }\r\n                \r\n                if(this.velocitySelect){\r\n                    // if(ballArray.length = 1){\r\n                    //     ballArray.push(new Ball(canvas.width/3, canvas.height/3, 10, undefined, undefined));\r\n                    //     //console.log(ballArray);\r\n                    // }\r\n                    for(let i = 0; i < this.arrowCentres.length; i++){\r\n                        if(vm.velocitySelect && Math.pow((Math.pow((mouseX-this.arrowCentres[i][0]),2) + Math.pow((mouseY-this.arrowCentres[i][1]),2)),1/2) < this.radius*2 && this.timeSinceClick > 20){\r\n                            this.timeSinceClick = 0;\r\n                            if(i == 0){\r\n                                console.log('tangential out'); \r\n                                this.newdx += this.buttonStep * Math.cos(this.tanAngle);\r\n                                this.newdy += this.buttonStep * Math.sin(this.tanAngle);\r\n                            }\r\n                            if(i == 1){\r\n                                console.log('radial in');\r\n                                this.newdx += this.buttonStep * Math.sin(this.tanAngle);\r\n                                this.newdy += this.buttonStep * Math.cos(this.tanAngle);\r\n                            }\r\n                            if(i == 2){\r\n                                console.log('tangential in');\r\n                                this.newdx += -this.buttonStep * Math.cos(this.tanAngle);\r\n                                this.newdy += -this.buttonStep * Math.sin(this.tanAngle);\r\n                            }\r\n                            if(i == 3){\r\n                                console.log('radial out');\r\n                                this.newdx += -this.buttonStep * Math.sin(this.tanAngle);\r\n                                this.newdy += -this.buttonStep * Math.cos(this.tanAngle);\r\n                            }\r\n                            console.log('arrow Press');\r\n                            this.path(this.newdx, this.newdy);\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.newdx = this.dx;\r\n                    this.newdy = this.dy;\r\n                }\r\n\r\n                //Change velocity and draw new path when touch released\r\n                if(!vm.touchSelect && this.arrowConfirmed){\r\n                    this.newdx = this.dx + (Math.cos(this.arrowAngle)) * (0.0005*this.mag/this.radius*20);\r\n                    this.newdy = this.dy + (Math.sin(this.arrowAngle)) * (0.0005*this.mag/this.radius*20);\r\n                    \r\n                    newPath = true;\r\n                    this.newCoords = [];\r\n                    this.newVels = [];\r\n                    this.path(this.newdx, this.newdy);\r\n\r\n                    if(this.newCoords.length > 0){\r\n                        this.pathCoords = this.newCoords;\r\n                        this.pathVels = this.newVels;\r\n                        if(this.closedPath){\r\n                            this.pathIndex = 1; \r\n                        } else{\r\n                            this.pathIndex = Math.round(this.pathCoords.length/2);\r\n                        }\r\n                    }\r\n\r\n                    this.arrowConfirmed = false;\r\n                }\r\n            }\r\n        }\r\n        \r\n        //let maxRadius = 30;\r\n        //let mouseRadius = 55;\r\n        let ballArray = [];\r\n\r\n        // [[x,y, mass]]\r\n        //let massCentres = [[canvas.width/3, canvas.height/3], [2*canvas.width/3, canvas.height/3], [canvas.width/2, 2*canvas.height/3]];\r\n        let massCentres = [[0, 0 , 100]];\r\n        let initialVel = 1;\r\n\r\n        ballArray.push(new Ball(canvas.width/3, canvas.height/3, 5, undefined, undefined));\r\n        for(let i = 0; i < ballArray.length; i++){\r\n            ballArray[i].path();\r\n        }\r\n\r\n        function animate() {\r\n            requestAnimationFrame(animate);\r\n\r\n            for (let i = 0; i < ballArray.length; i++){\r\n\r\n                // If statement fixes bug of rect not fully clearing when scale small\r\n                if(1/ballArray[i].scale >= 1){\r\n                c.clearRect(-canvas.width*(1/ballArray[i].scale)/2, -canvas.height*(1/ballArray[i].scale)/2, canvas.width*(1/ballArray[i].scale), canvas.height*(1/ballArray[i].scale));\r\n                } else{\r\n                    c.clearRect(-canvas.width/2, -canvas.height/2, canvas.width, canvas.height);\r\n                }\r\n                \r\n                //bounding box\r\n                // c.beginPath();\r\n                // c.moveTo(-canvas.width*(1/ballArray[i].scale)/2, -canvas.height*(1/ballArray[i].scale)/2);\r\n                // c.lineTo(canvas.width*(1/ballArray[i].scale)/2, -canvas.height*(1/ballArray[i].scale)/2);\r\n                // c.lineTo(canvas.width*(1/ballArray[i].scale)/2, canvas.height*(1/ballArray[i].scale)/2);\r\n                // c.lineTo(-canvas.width*(1/ballArray[i].scale)/2, canvas.height*(1/ballArray[i].scale)/2);\r\n                // c.lineTo(-canvas.width*(1/ballArray[i].scale)/2, -canvas.height*(1/ballArray[i].scale)/2);\r\n                // c.lineWidth = 1;\r\n                // c.stroke();\r\n            }\r\n\r\n            mouseX = (vm.mouse.x - rect.left)*(1/ballArray[0].scale) - canvas.width/2;\r\n            mouseY = (vm.mouse.y - rect.top )*(1/ballArray[0].scale) - canvas.height/2;\r\n            currentTouchX = (vm.currentTouchPos.x - rect.left - canvas.width/2)*(1/ballArray[0].scale);\r\n            currentTouchY = (vm.currentTouchPos.y - rect.top - canvas.height/2)*(1/ballArray[0].scale);\r\n            // initialTouchX = (vm.initialTouchPos.x - rect.left - canvas.width/2)*(1/ballArray[0].scale);\r\n            // initialTouchY = (vm.initialTouchPos.y - rect.top - canvas.height/2)*(1/ballArray[0].scale);\r\n\r\n            for (let i = 0; i < ballArray.length; i++){\r\n                ballArray[i].update();\r\n            }\r\n\r\n            for (let i = 0; i <massCentres.length; i++){\r\n                c.beginPath();\r\n                c.arc(massCentres[i][0], massCentres[i][1], vm.sunRadius, 0, Math.PI * 2); \r\n                c.fillStyle = 'Orange';\r\n                c.fill();\r\n            }\r\n\r\n            c.beginPath();\r\n            c.arc(mouseX, mouseY, 20, 0, Math.PI * 2);\r\n            c.fillStyle = \"black\";\r\n            c.fill();\r\n            \r\n            // c.beginPath();\r\n            // c.arc(2316, 669, 500, 0, Math.PI * 2); \r\n            // c.fillStyle = 'Red';\r\n            // c.fill();\r\n            \r\n        }\r\n\r\n        animate();\r\n\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n#front-animation{\r\n    /* border: 1px solid black; */\r\n}\r\n</style>"]}]}