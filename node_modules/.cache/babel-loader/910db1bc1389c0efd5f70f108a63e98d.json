{"remainingRequest":"/home/robert/Desktop/Visualisations2020/Orbits/node_modules/babel-loader/lib/index.js!/home/robert/Desktop/Visualisations2020/Orbits/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/robert/Desktop/Visualisations2020/Orbits/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/robert/Desktop/Visualisations2020/Orbits/src/components/EffectivePotential.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/robert/Desktop/Visualisations2020/Orbits/src/components/EffectivePotential.vue","mtime":1597319229935},{"path":"/home/robert/Desktop/Visualisations2020/Orbits/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/robert/Desktop/Visualisations2020/Orbits/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/robert/Desktop/Visualisations2020/Orbits/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/robert/Desktop/Visualisations2020/Orbits/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnOwppbXBvcnQgUGxvdGx5IGZyb20gJ3Bsb3RseS5qcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnaXYtZWZmLXBvdCcsCiAgcHJvcHM6IHsKICAgIGVuZXJnaWVzOiB7CiAgICAgIGRlZmF1bHQ6IFtdCiAgICB9LAogICAgcmVkcmF3OiB7CiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZVBsb3Q6IGZ1bmN0aW9uIHVwZGF0ZVBsb3QoZW5lcmdpZXMpIHsKICAgICAgY29uc29sZS5sb2coJ3VwZGF0ZVBsb3QgRWZmUG90Jyk7CiAgICAgIHRoaXMuZW5lcmdpZXMgPSBlbmVyZ2llczsKICAgICAgdGhpcy5yZWRyYXcgPSB0cnVlOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciB2bSA9IHRoaXM7CiAgICB2YXIgR3JhdkNvbnN0ID0gMTsKICAgIHZhciBzdW5NYXNzID0gMTAwOwogICAgdmFyIHBsb3RSYWRpdXMgPSAyMDA7IC8vZmluZCBlbmVyZ3kgb2Ygb3JiaXQKCiAgICBmdW5jdGlvbiBmaW5kRSgpIHsKICAgICAgLy8gRSA9IFVlZmYgKyByYWRpYWwgS0UKICAgICAgdmFyIHJNYWcgPSBNYXRoLnBvdyhNYXRoLnBvdyh2bS5lbmVyZ2llc1swXVswXSwgMikgKyBNYXRoLnBvdyh2bS5lbmVyZ2llc1swXVsxXSwgMiksIDAuNSk7CiAgICAgIHZhciB2TWFnID0gTWF0aC5wb3coTWF0aC5wb3codm0uZW5lcmdpZXNbMV1bMF0sIDIpICsgTWF0aC5wb3codm0uZW5lcmdpZXNbMV1bMV0sIDIpLCAwLjUpOwogICAgICB2YXIgRSA9IGVmZmVjdGl2ZVBvdGVudGlhbChyTWFnKSArIDAuNSAqIE1hdGgucG93KHZNYWcsIDIpOwogICAgICByZXR1cm4gRTsKICAgIH0KCiAgICA7IC8vciBzaG91bGQgYmUgc2NhbGFyCgogICAgZnVuY3Rpb24gZmVsdFBvdGVudGlhbChyKSB7CiAgICAgIHZhciB2TWFnID0gTWF0aC5wb3coTWF0aC5wb3codm0uZW5lcmdpZXNbMV1bMF0sIDIpICsgTWF0aC5wb3codm0uZW5lcmdpZXNbMV1bMV0sIDIpLCAwLjUpOwogICAgICB2YXIgck1hZyA9IE1hdGgucG93KE1hdGgucG93KHZtLmVuZXJnaWVzWzBdWzBdLCAyKSArIE1hdGgucG93KHZtLmVuZXJnaWVzWzBdWzFdLCAyKSwgMC41KTsgLy9DdXJyZW50IHBvc2l0aW9uIGZvciBjb25zdGFudCBMIGNhbGN1bGF0aW9uCgogICAgICB2YXIgYU1hZyA9IE1hdGgucG93KE1hdGgucG93KHZtLmVuZXJnaWVzWzBdWzBdICsgdm0uZW5lcmdpZXNbMV1bMF0sIDIpICsgTWF0aC5wb3codm0uZW5lcmdpZXNbMF1bMV0gKyB2bS5lbmVyZ2llc1sxXVsxXSwgMiksIDAuNSk7CiAgICAgIHZhciB0aGV0YSA9IE1hdGguYWNvcygoTWF0aC5wb3cock1hZywgMikgKyBNYXRoLnBvdyh2TWFnLCAyKSAtIE1hdGgucG93KGFNYWcsIDIpKSAvICgyICogck1hZyAqIHZNYWcpKTsKICAgICAgY29uc29sZS5sb2codk1hZywgck1hZywgYU1hZywgdGhldGEpOwogICAgICB2YXIgTCA9IHZNYWcgKiByTWFnICogTWF0aC5zaW4odGhldGEpOwogICAgICByZXR1cm4gTWF0aC5wb3coTCwgMikgLyAoMiAqIE1hdGgucG93KHIsIDIpKTsKICAgIH0KCiAgICA7IC8vciBzaG91bGQgYmUgc2NhbGFyCgogICAgZnVuY3Rpb24gcmVhbFBvdGVudGlhbChyKSB7CiAgICAgIHJldHVybiAtR3JhdkNvbnN0ICogc3VuTWFzcyAqICgxIC8gcik7CiAgICB9CgogICAgOyAvL3Igc2hvdWxkIGJlIHNjYWxhcgoKICAgIGZ1bmN0aW9uIGVmZmVjdGl2ZVBvdGVudGlhbChyKSB7CiAgICAgIHJldHVybiBmZWx0UG90ZW50aWFsKHIpICsgcmVhbFBvdGVudGlhbChyKTsKICAgIH0KCiAgICA7CgogICAgZnVuY3Rpb24gcmVkcmF3KCkgewogICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUocmVkcmF3KTsKCiAgICAgIGlmICh2bS5yZWRyYXcgJiYgdm0uZW5lcmdpZXMubGVuZ3RoKSB7CiAgICAgICAgdmFyIHJWYWxzID0gW107CiAgICAgICAgdmFyIFVlZmYgPSBbXTsKICAgICAgICB2YXIgVSA9IFtdOwogICAgICAgIHZhciBVZmVsdCA9IFtdOwogICAgICAgIHZhciBFbmVyZ3lZID0gW107CiAgICAgICAgdmFyIEVuZXJneSA9IGZpbmRFKCk7CgogICAgICAgIGZvciAodmFyIHIgPSAwLjE7IHIgPCBwbG90UmFkaXVzOyByICs9IDAuMDEpIHsKICAgICAgICAgIHJWYWxzLnB1c2gocik7CiAgICAgICAgICBVZWZmLnB1c2goZWZmZWN0aXZlUG90ZW50aWFsKHIpKTsKICAgICAgICAgIFUucHVzaChyZWFsUG90ZW50aWFsKHIpKTsKICAgICAgICAgIFVmZWx0LnB1c2goZmVsdFBvdGVudGlhbChyKSk7CiAgICAgICAgICBFbmVyZ3lZLnB1c2goRW5lcmd5KTsKICAgICAgICB9CgogICAgICAgIDsKICAgICAgICB2YXIgdHJhY2UxID0gewogICAgICAgICAgeDogclZhbHMsCiAgICAgICAgICB5OiBVZWZmLAogICAgICAgICAgdHlwZTogJ3NjYXR0ZXInLAogICAgICAgICAgbmFtZTogJ0VmZiBQb3QnCiAgICAgICAgfTsKICAgICAgICB2YXIgdHJhY2UyID0gewogICAgICAgICAgeDogclZhbHMsCiAgICAgICAgICB5OiBVLAogICAgICAgICAgdHlwZTogJ3NjYXR0ZXInLAogICAgICAgICAgbmFtZTogJ1BvdGVudGlhbCcKICAgICAgICB9OwogICAgICAgIHZhciB0cmFjZTMgPSB7CiAgICAgICAgICB4OiByVmFscywKICAgICAgICAgIHk6IFVmZWx0LAogICAgICAgICAgdHlwZTogJ3NjYXR0ZXInLAogICAgICAgICAgbmFtZTogJ0FuZyBNb20nCiAgICAgICAgfTsKICAgICAgICB2YXIgdG90RSA9IHsKICAgICAgICAgIHg6IHJWYWxzLAogICAgICAgICAgeTogRW5lcmd5WSwKICAgICAgICAgIG5hbWU6ICdUb3RhbCBFbmVyZ3knLAogICAgICAgICAgbGluZTogewogICAgICAgICAgICBkYXNoOiAnZGFzaCcsCiAgICAgICAgICAgIHdpZHRoOiAxCiAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICB2YXIgZGF0YSA9IFt0b3RFLCB0cmFjZTEsIHRyYWNlMiwgdHJhY2UzXTsKICAgICAgICBQbG90bHkubmV3UGxvdCgncG90ZW50aWFsUGxvdCcsIGRhdGEsIHsKICAgICAgICAgIHhheGlzOiB7CiAgICAgICAgICAgIHJhbmdlOiBbMCwgcGxvdFJhZGl1c10KICAgICAgICAgIH0sCiAgICAgICAgICB5YXhpczogewogICAgICAgICAgICByYW5nZTogWy0xMCwgMV0KICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICB2bS5yZWRyYXcgPSBmYWxzZTsKICAgICAgfQogICAgfQoKICAgIHJlZHJhdygpOwogIH0KfTs="},{"version":3,"sources":["EffectivePotential.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <div id=\"potentialPlot\" >\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3';\r\nimport Plotly from 'plotly.js';\r\n\r\nexport default {\r\n    name:'iv-eff-pot',\r\n    props: {\r\n        energies: {default: []},\r\n        redraw: {default: true},\r\n    },\r\n    methods:{\r\n        updatePlot(energies){\r\n            console.log('updatePlot EffPot');\r\n            this.energies = energies;\r\n            this.redraw = true;\r\n        }\r\n    },\r\n    mounted(){\r\n        let vm = this;\r\n        const GravConst = 1;\r\n        const sunMass = 100;\r\n\r\n        let plotRadius = 200;\r\n\r\n        //find energy of orbit\r\n        function findE(){\r\n            // E = Ueff + radial KE\r\n            let rMag = Math.pow(Math.pow(vm.energies[0][0], 2) + Math.pow(vm.energies[0][1],2),0.5);\r\n            let vMag = Math.pow(Math.pow(vm.energies[1][0], 2) + Math.pow(vm.energies[1][1],2),0.5);\r\n\r\n            let E = effectivePotential(rMag) + 0.5*Math.pow(vMag,2);\r\n            return E\r\n        };\r\n\r\n        //r should be scalar\r\n        function feltPotential(r){\r\n            let vMag = Math.pow(Math.pow(vm.energies[1][0],2) + Math.pow(vm.energies[1][1],2), 0.5);\r\n            let rMag = Math.pow(Math.pow(vm.energies[0][0],2) + Math.pow(vm.energies[0][1],2), 0.5); //Current position for constant L calculation\r\n            let aMag = Math.pow(Math.pow(vm.energies[0][0] + vm.energies[1][0],2) + Math.pow(vm.energies[0][1] + vm.energies[1][1],2), 0.5);\r\n            let theta = Math.acos((Math.pow(rMag,2) + Math.pow(vMag,2) - Math.pow(aMag,2))/(2*rMag*vMag));\r\n            \r\n            console.log(vMag, rMag, aMag, theta);\r\n\r\n            let L = vMag * rMag * Math.sin(theta);\r\n\r\n            return Math.pow(L, 2)/(2*Math.pow(r, 2));\r\n        };\r\n\r\n        //r should be scalar\r\n        function realPotential(r){\r\n            return -GravConst*sunMass*(1/r);\r\n        };\r\n\r\n        //r should be scalar\r\n        function effectivePotential(r){\r\n            return feltPotential(r) + realPotential(r);\r\n        };\r\n\r\n        function redraw(){\r\n            requestAnimationFrame(redraw);\r\n\r\n            if(vm.redraw && vm.energies.length){\r\n                \r\n                let rVals = [];\r\n                let Ueff = [];\r\n                let U = [];\r\n                let Ufelt = [];\r\n                let EnergyY = [];\r\n                let Energy = findE();\r\n\r\n                for(let r = 0.1; r < plotRadius; r+= 0.01){\r\n                    rVals.push(r);\r\n                    Ueff.push(effectivePotential(r));\r\n                    U.push(realPotential(r));\r\n                    Ufelt.push(feltPotential(r));\r\n                    EnergyY.push(Energy);\r\n                };\r\n\r\n\r\n                let trace1 = {\r\n                x: rVals,\r\n                y: Ueff,\r\n                type: 'scatter',\r\n                name: 'Eff Pot',\r\n                };\r\n\r\n                let trace2 = {\r\n                x: rVals,\r\n                y: U,\r\n                type: 'scatter',\r\n                name: 'Potential',\r\n                };\r\n\r\n                let trace3 = {\r\n                x: rVals,\r\n                y: Ufelt,\r\n                type: 'scatter',\r\n                name: 'Ang Mom',\r\n                };\r\n\r\n                let totE = {\r\n                x: rVals,\r\n                y: EnergyY,\r\n                name: 'Total Energy',\r\n                line: {dash: 'dash', width: 1},\r\n                };\r\n\r\n                let data = [totE, trace1, trace2, trace3];\r\n\r\n                Plotly.newPlot('potentialPlot', data, {\r\n                xaxis: {range: [0, plotRadius]},\r\n                yaxis: {range: [-10, 1]}\r\n                })\r\n\r\n\r\n                vm.redraw = false;\r\n            }\r\n        }\r\n\r\n        redraw();\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components"}]}