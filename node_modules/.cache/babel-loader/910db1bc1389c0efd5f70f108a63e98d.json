{"remainingRequest":"/home/robert/Desktop/Visualisations2020/Orbits/node_modules/babel-loader/lib/index.js!/home/robert/Desktop/Visualisations2020/Orbits/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/robert/Desktop/Visualisations2020/Orbits/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/robert/Desktop/Visualisations2020/Orbits/src/components/EffectivePotential.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/robert/Desktop/Visualisations2020/Orbits/src/components/EffectivePotential.vue","mtime":1597398435828},{"path":"/home/robert/Desktop/Visualisations2020/Orbits/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/robert/Desktop/Visualisations2020/Orbits/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/robert/Desktop/Visualisations2020/Orbits/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/robert/Desktop/Visualisations2020/Orbits/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnOwppbXBvcnQgUGxvdGx5IGZyb20gJ3Bsb3RseS5qcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnaXYtZWZmLXBvdCcsCiAgcHJvcHM6IHsKICAgIHBhdGhWYWxzOiB7CiAgICAgIGRlZmF1bHQ6IFtdCiAgICB9LAogICAgcmVkcmF3OiB7CiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0sCiAgICBjdXJyZW50UmFkaXVzOiB7CiAgICAgIGRlZmF1bHQ6IDAKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZVBsb3Q6IGZ1bmN0aW9uIHVwZGF0ZVBsb3QocGF0aFZhbHMpIHsKICAgICAgdGhpcy5wYXRoVmFscyA9IHBhdGhWYWxzOwogICAgICB0aGlzLnJlZHJhdyA9IHRydWU7CiAgICB9LAogICAgdXBkYXRlUG9zaXRpb246IGZ1bmN0aW9uIHVwZGF0ZVBvc2l0aW9uKHBvcykgewogICAgICB0aGlzLmN1cnJlbnRSYWRpdXMgPSBNYXRoLnBvdyhNYXRoLnBvdyhwb3NbMF0sIDIpICsgTWF0aC5wb3cocG9zWzFdLCAyKSwgMC41KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgdm0gPSB0aGlzOwogICAgdmFyIEdyYXZDb25zdCA9IDE7CiAgICB2YXIgc3VuTWFzcyA9IDEwMDsKICAgIHZhciBwbG90UmFkaXVzID0gMjAwOyAvL2ZpbmQgZW5lcmd5IG9mIG9yYml0CgogICAgZnVuY3Rpb24gZmluZEUoKSB7CiAgICAgIC8vIEUgPSBVZWZmICsgcmFkaWFsIEtFCiAgICAgIHZhciByTWFnID0gTWF0aC5wb3coTWF0aC5wb3codm0ucGF0aFZhbHNbMF1bMF0sIDIpICsgTWF0aC5wb3codm0ucGF0aFZhbHNbMF1bMV0sIDIpLCAwLjUpOwogICAgICB2YXIgdk1hZyA9IE1hdGgucG93KE1hdGgucG93KHZtLnBhdGhWYWxzWzFdWzBdLCAyKSArIE1hdGgucG93KHZtLnBhdGhWYWxzWzFdWzFdLCAyKSwgMC41KTsKICAgICAgdmFyIEUgPSBlZmZlY3RpdmVQb3RlbnRpYWwock1hZykgKyAwLjUgKiBNYXRoLnBvdyh2TWFnLCAyKTsKICAgICAgY29uc29sZS5sb2coJ2VuZXJneSA9ICcsIEUpOwogICAgICByZXR1cm4gRTsKICAgIH0KCiAgICA7IC8vciBzaG91bGQgYmUgc2NhbGFyCgogICAgZnVuY3Rpb24gZmVsdFBvdGVudGlhbChyKSB7CiAgICAgIHZhciB2TWFnID0gTWF0aC5wb3coTWF0aC5wb3codm0ucGF0aFZhbHNbMV1bMF0sIDIpICsgTWF0aC5wb3codm0ucGF0aFZhbHNbMV1bMV0sIDIpLCAwLjUpOwogICAgICB2YXIgck1hZyA9IE1hdGgucG93KE1hdGgucG93KHZtLnBhdGhWYWxzWzBdWzBdLCAyKSArIE1hdGgucG93KHZtLnBhdGhWYWxzWzBdWzFdLCAyKSwgMC41KTsgLy9DdXJyZW50IHBvc2l0aW9uIGZvciBjb25zdGFudCBMIGNhbGN1bGF0aW9uCgogICAgICB2YXIgYU1hZyA9IE1hdGgucG93KE1hdGgucG93KHZtLnBhdGhWYWxzWzBdWzBdICsgdm0ucGF0aFZhbHNbMV1bMF0sIDIpICsgTWF0aC5wb3codm0ucGF0aFZhbHNbMF1bMV0gKyB2bS5wYXRoVmFsc1sxXVsxXSwgMiksIDAuNSk7CiAgICAgIHZhciB0aGV0YSA9IE1hdGguYWNvcygoTWF0aC5wb3cock1hZywgMikgKyBNYXRoLnBvdyh2TWFnLCAyKSAtIE1hdGgucG93KGFNYWcsIDIpKSAvICgyICogck1hZyAqIHZNYWcpKTsgLy9jb25zb2xlLmxvZyh2TWFnLCByTWFnLCBhTWFnLCB0aGV0YSk7CgogICAgICB2YXIgTCA9IHZNYWcgKiByTWFnICogTWF0aC5zaW4odGhldGEpOwogICAgICByZXR1cm4gTWF0aC5wb3coTCwgMikgLyAoMiAqIE1hdGgucG93KHIsIDIpKTsKICAgIH0KCiAgICA7IC8vciBzaG91bGQgYmUgc2NhbGFyCgogICAgZnVuY3Rpb24gcmVhbFBvdGVudGlhbChyKSB7CiAgICAgIHJldHVybiAtR3JhdkNvbnN0ICogc3VuTWFzcyAqICgxIC8gcik7CiAgICB9CgogICAgOyAvL3Igc2hvdWxkIGJlIHNjYWxhcgoKICAgIGZ1bmN0aW9uIGVmZmVjdGl2ZVBvdGVudGlhbChyKSB7CiAgICAgIHJldHVybiBmZWx0UG90ZW50aWFsKHIpICsgcmVhbFBvdGVudGlhbChyKTsKICAgIH0KCiAgICA7IC8vZmluZHMgbWluIGFuZCBtYXggb2YgcG90ZW50aWFscyBhdCBtaW5pbXVtIHJhZGl1cyBvZiBvcmJpdCAoZm9yIHJlYXNvbmFibGUgcGxvdHRpbmcpCgogICAgZnVuY3Rpb24gZmluZFlSYW5nZSgpIHsKICAgICAgdmFyIG1pblIgPSB2bS5wYXRoVmFsc1szXTsKICAgICAgdmFyIHlNaW4gPSBNYXRoLm1pbihyZWFsUG90ZW50aWFsKG1pblIpLCBmZWx0UG90ZW50aWFsKG1pblIpKTsKICAgICAgdmFyIHlNYXggPSBNYXRoLm1heChyZWFsUG90ZW50aWFsKG1pblIpLCBmZWx0UG90ZW50aWFsKG1pblIpKTsKICAgICAgcmV0dXJuIFt5TWluICogMS4sIHlNYXhdOwogICAgfQoKICAgIGZ1bmN0aW9uIHJlZHJhdygpIHsKICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHJlZHJhdyk7IC8vdXBkYXRlIGxpbmVzIHdoZW4gCgogICAgICBpZiAodm0ucmVkcmF3ICYmIHBsb3RSYWRpdXMgIT09IHZtLnBhdGhWYWxzWzJdKSB7CiAgICAgICAgdmFyIHJWYWxzID0gW107CiAgICAgICAgdmFyIFVlZmYgPSBbXTsKICAgICAgICB2YXIgVSA9IFtdOwogICAgICAgIHZhciBVZmVsdCA9IFtdOwogICAgICAgIHZhciBFbmVyZ3lZID0gW107CiAgICAgICAgdmFyIEVuZXJneSA9IGZpbmRFKCk7CiAgICAgICAgcGxvdFJhZGl1cyA9IHZtLnBhdGhWYWxzWzJdOwogICAgICAgIHZhciBzdGVwU2l6ZSA9IHBsb3RSYWRpdXMgLyAyMDA7CgogICAgICAgIGZvciAodmFyIHIgPSAwLjE7IHIgPCBwbG90UmFkaXVzOyByICs9IHN0ZXBTaXplKSB7CiAgICAgICAgICByVmFscy5wdXNoKHIpOwogICAgICAgICAgVWVmZi5wdXNoKGVmZmVjdGl2ZVBvdGVudGlhbChyKSk7CiAgICAgICAgICBVLnB1c2gocmVhbFBvdGVudGlhbChyKSk7CiAgICAgICAgICBVZmVsdC5wdXNoKGZlbHRQb3RlbnRpYWwocikpOwogICAgICAgICAgRW5lcmd5WS5wdXNoKEVuZXJneSk7CiAgICAgICAgfQoKICAgICAgICA7CiAgICAgICAgdmFyIHRyYWNlMSA9IHsKICAgICAgICAgIHg6IHJWYWxzLAogICAgICAgICAgeTogVWVmZiwKICAgICAgICAgIHR5cGU6ICdsaW5lcycsCiAgICAgICAgICBuYW1lOiAnRWZmIFBvdCcKICAgICAgICB9OwogICAgICAgIHZhciB0cmFjZTIgPSB7CiAgICAgICAgICB4OiByVmFscywKICAgICAgICAgIHk6IFUsCiAgICAgICAgICB0eXBlOiAnbGluZXMnLAogICAgICAgICAgbmFtZTogJ1BvdGVudGlhbCcKICAgICAgICB9OwogICAgICAgIHZhciB0cmFjZTMgPSB7CiAgICAgICAgICB4OiByVmFscywKICAgICAgICAgIHk6IFVmZWx0LAogICAgICAgICAgdHlwZTogJ2xpbmVzJywKICAgICAgICAgIG5hbWU6ICdBbmcgTW9tJwogICAgICAgIH07CiAgICAgICAgdmFyIHRvdEUgPSB7CiAgICAgICAgICB4OiByVmFscywKICAgICAgICAgIHk6IEVuZXJneVksCiAgICAgICAgICBuYW1lOiAnVG90YWwgRW5lcmd5JywKICAgICAgICAgIGxpbmU6IHsKICAgICAgICAgICAgZGFzaDogJ2Rhc2gnLAogICAgICAgICAgICB3aWR0aDogMQogICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgdmFyIGRhdGEgPSBbdG90RSwgdHJhY2UxLCB0cmFjZTIsIHRyYWNlM107CiAgICAgICAgUGxvdGx5Lm5ld1Bsb3QoJ3BvdGVudGlhbFBsb3QnLCBkYXRhLCB7CiAgICAgICAgICB4YXhpczogewogICAgICAgICAgICByYW5nZTogWzAsIHBsb3RSYWRpdXNdLAogICAgICAgICAgICB0aXRsZTogJ1JhZGl1cycKICAgICAgICAgIH0sCiAgICAgICAgICB5YXhpczogewogICAgICAgICAgICByYW5nZTogZmluZFlSYW5nZSgpCiAgICAgICAgICB9LAogICAgICAgICAgbWFyZ2luOiB7CiAgICAgICAgICAgIHQ6IDEwLAogICAgICAgICAgICBsOiAyMCwKICAgICAgICAgICAgYjogNTAKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICB2bS5yZWRyYXcgPSBmYWxzZTsKICAgICAgfQoKICAgICAgdmFyIG1hcmtlciA9IHsKICAgICAgICB4OiBbdm0uY3VycmVudFJhZGl1c10sCiAgICAgICAgeTogW2VmZmVjdGl2ZVBvdGVudGlhbCh2bS5jdXJyZW50UmFkaXVzKV0sCiAgICAgICAgdHlwZTogIm1hcmtlcnMiLAogICAgICAgIG5hbWU6ICJDdXJyZW50IFVlZmYiCiAgICAgIH07CiAgICAgIFBsb3RseS5hbmltYXRlKCdwb3RlbnRpYWxQbG90JywgewogICAgICAgIGRhdGE6IFttYXJrZXJdCiAgICAgIH0sIHsKICAgICAgICBmcm9tY3VycmVudDogdHJ1ZSwKICAgICAgICB0cmFuc2l0aW9uOiB7CiAgICAgICAgICBkdXJhdGlvbjogMAogICAgICAgIH0sCiAgICAgICAgZnJhbWU6IHsKICAgICAgICAgIGR1cmF0aW9uOiAwLAogICAgICAgICAgcmVkcmF3OiBmYWxzZQogICAgICAgIH0KICAgICAgfSk7CiAgICB9CgogICAgcmVkcmF3KCk7CiAgfQp9Ow=="},{"version":3,"sources":["EffectivePotential.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <div id=\"potentialPlot\" style=\"height: 35vh\">\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3';\r\nimport Plotly from 'plotly.js';\r\n\r\nexport default {\r\n    name:'iv-eff-pot',\r\n    props: {\r\n        pathVals: {default: []},\r\n        redraw: {default: true},\r\n        currentRadius: {default: 0},\r\n    },\r\n    methods:{\r\n        updatePlot(pathVals){\r\n            this.pathVals = pathVals;\r\n            this.redraw = true;\r\n        },\r\n        updatePosition(pos){\r\n            this.currentRadius = Math.pow(Math.pow(pos[0], 2) + Math.pow(pos[1], 2), 0.5);\r\n        }\r\n    },\r\n    mounted(){\r\n        let vm = this;\r\n        const GravConst = 1;\r\n        const sunMass = 100;\r\n\r\n        let plotRadius = 200;\r\n\r\n        //find energy of orbit\r\n        function findE(){\r\n            // E = Ueff + radial KE\r\n            let rMag = Math.pow(Math.pow(vm.pathVals[0][0], 2) + Math.pow(vm.pathVals[0][1],2),0.5);\r\n            let vMag = Math.pow(Math.pow(vm.pathVals[1][0], 2) + Math.pow(vm.pathVals[1][1],2),0.5);\r\n\r\n            let E = effectivePotential(rMag) + 0.5*Math.pow(vMag,2);\r\n            console.log('energy = ', E);\r\n            return E\r\n        };\r\n\r\n        //r should be scalar\r\n        function feltPotential(r){\r\n            let vMag = Math.pow(Math.pow(vm.pathVals[1][0],2) + Math.pow(vm.pathVals[1][1],2), 0.5);\r\n            let rMag = Math.pow(Math.pow(vm.pathVals[0][0],2) + Math.pow(vm.pathVals[0][1],2), 0.5); //Current position for constant L calculation\r\n            let aMag = Math.pow(Math.pow(vm.pathVals[0][0] + vm.pathVals[1][0],2) + Math.pow(vm.pathVals[0][1] + vm.pathVals[1][1],2), 0.5);\r\n            let theta = Math.acos((Math.pow(rMag,2) + Math.pow(vMag,2) - Math.pow(aMag,2))/(2*rMag*vMag));\r\n            \r\n            //console.log(vMag, rMag, aMag, theta);\r\n\r\n            let L = vMag * rMag * Math.sin(theta);\r\n\r\n            return Math.pow(L, 2)/(2*Math.pow(r, 2));\r\n        };\r\n\r\n        //r should be scalar\r\n        function realPotential(r){\r\n            return -GravConst*sunMass*(1/r);\r\n        };\r\n\r\n        //r should be scalar\r\n        function effectivePotential(r){\r\n            return feltPotential(r) + realPotential(r);\r\n        };\r\n\r\n        //finds min and max of potentials at minimum radius of orbit (for reasonable plotting)\r\n        function findYRange(){\r\n            let minR = vm.pathVals[3];\r\n            let yMin = Math.min(realPotential(minR), feltPotential(minR));\r\n            let yMax = Math.max(realPotential(minR), feltPotential(minR));\r\n            return [yMin*1., yMax];\r\n        }\r\n\r\n        function redraw(){\r\n            requestAnimationFrame(redraw);\r\n\r\n            //update lines when \r\n            if(vm.redraw && plotRadius !== vm.pathVals[2]){\r\n                \r\n                let rVals = [];\r\n                let Ueff = [];\r\n                let U = [];\r\n                let Ufelt = [];\r\n                let EnergyY = [];\r\n                let Energy = findE();\r\n                \r\n                plotRadius = vm.pathVals[2];\r\n                let stepSize = plotRadius/200;\r\n\r\n                for(let r = 0.1; r < plotRadius; r+= stepSize){\r\n                    rVals.push(r);\r\n                    Ueff.push(effectivePotential(r));\r\n                    U.push(realPotential(r));\r\n                    Ufelt.push(feltPotential(r));\r\n                    EnergyY.push(Energy);\r\n                };\r\n\r\n\r\n                let trace1 = {\r\n                x: rVals,\r\n                y: Ueff,\r\n                type: 'lines',\r\n                name: 'Eff Pot',\r\n                };\r\n\r\n                let trace2 = {\r\n                x: rVals,\r\n                y: U,\r\n                type: 'lines',\r\n                name: 'Potential',\r\n                };\r\n\r\n                let trace3 = {\r\n                x: rVals,\r\n                y: Ufelt,\r\n                type: 'lines',\r\n                name: 'Ang Mom',\r\n                };\r\n\r\n                let totE = {\r\n                x: rVals,\r\n                y: EnergyY,\r\n                name: 'Total Energy',\r\n                line: {dash: 'dash', width: 1},\r\n                };\r\n\r\n                let data = [totE, trace1, trace2, trace3];\r\n\r\n                Plotly.newPlot('potentialPlot', data, {\r\n                xaxis: {range: [0, plotRadius],\r\n                title: 'Radius',},\r\n                yaxis: {range: findYRange()},\r\n                margin: {\r\n                    t: 10,\r\n                    l: 20,\r\n                    b: 50,\r\n                }\r\n                })\r\n\r\n\r\n                vm.redraw = false;\r\n            }\r\n\r\n            let marker = {\r\n                x:[vm.currentRadius],\r\n                y:[effectivePotential(vm.currentRadius)],\r\n                type:\"markers\",\r\n                name:\"Current Ueff\"\r\n\r\n            };\r\n\r\n            Plotly.animate('potentialPlot',\r\n                {data: [marker]},\r\n                {\r\n                    fromcurrent: true,\r\n                    transition: {duration: 0},\r\n                    frame: {duration: 0, redraw: false}\r\n                }\r\n            );\r\n        }\r\n\r\n        redraw();\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components"}]}