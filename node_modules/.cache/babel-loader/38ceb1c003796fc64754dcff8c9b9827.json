{"remainingRequest":"C:\\Users\\Pured\\Desktop\\Visualisations 2020\\OrbitsTest\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Pured\\Desktop\\Visualisations 2020\\OrbitsTest\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Pured\\Desktop\\Visualisations 2020\\OrbitsTest\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Pured\\Desktop\\Visualisations 2020\\OrbitsTest\\src\\components\\Orbits.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Pured\\Desktop\\Visualisations 2020\\OrbitsTest\\src\\components\\Orbits.vue","mtime":1597849320428},{"path":"C:\\Users\\Pured\\Desktop\\Visualisations 2020\\OrbitsTest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Pured\\Desktop\\Visualisations 2020\\OrbitsTest\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Pured\\Desktop\\Visualisations 2020\\OrbitsTest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Pured\\Desktop\\Visualisations 2020\\OrbitsTest\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Orbits.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div id=\"parent\" style=\"height:100%;\" @mousemove=\"mouseOver\" @mouseleave=\"mouseLeave\" @mousedown=\"activateSelect\" @mouseup=\"cancelSelect\" @touchstart=\"touchOn\" @touchend=\"touchOff\" @touchmove=\"touchChange\">\r\n         <canvas id=\"canvas\" style=\"width:100%; height:100%\" ></canvas>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'iv-orbits',\r\n    props: {\r\n        mouse: {\r\n            default: {\r\n                x: undefined,\r\n                y: undefined\r\n            }\r\n        },\r\n        animationSpeed: {\r\n            default: 1\r\n        },\r\n        velocitySelect: {\r\n            default: false\r\n        },\r\n        sunRadius: {\r\n            default: 20\r\n        },\r\n        touchSelect: {\r\n            default: false\r\n        },\r\n        initialTouchPos:{\r\n            default: {\r\n                x: undefined,\r\n                y: undefined\r\n            }\r\n        },\r\n        currentTouchPos:{\r\n            default: {\r\n                x: undefined,\r\n                y: undefined\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        touchOn(event){\r\n            this.initialTouchPos.x = event.touches[0].pageX;\r\n            this.initialTouchPos.y = event.touches[0].pageY;\r\n            //console.log('touchOn');\r\n        },\r\n        touchOff(){\r\n            this.touchSelect = false;\r\n            this.currentTouchPos.x = undefined;\r\n            this.currentTouchPos.y = undefined;\r\n            this.initialTouchPos.x = undefined;\r\n            this.initialTouchPos.y = undefined;\r\n            //console.log('touchOff');\r\n        },\r\n        touchChange(event){\r\n            this.touchSelect = true;\r\n            this.currentTouchPos.x = event.touches[0].pageX;\r\n            this.currentTouchPos.y = event.touches[0].pageY;\r\n        },\r\n        mouseOver(event){\r\n            this.mouse.x = event.x;\r\n            this.mouse.y = event.y;\r\n        },\r\n        mouseLeave(){\r\n            this.mouse.x = undefined;\r\n            this.mouse.y = undefined;\r\n        },\r\n        activateSelect(){\r\n            this.velocitySelect = true;\r\n        },\r\n        cancelSelect(){\r\n            this.velocitySelect = false;\r\n        },\r\n    },\r\n    mounted(){\r\n        let vm = this;\r\n        let canvas = document.querySelector('canvas');\r\n        let parent = document.getElementById('parent');\r\n        let rect = parent.getBoundingClientRect();\r\n        let mouseX = null;\r\n        let mouseY = null;\r\n        let currentTouchX = null;\r\n        let currentTouchY = null;\r\n        let c = canvas.getContext('2d');\r\n        let scale = 1;\r\n\r\n\r\n        function resize(){\r\n            canvas = document.querySelector('canvas');\r\n            parent = document.getElementById('parent');\r\n            rect = parent.getBoundingClientRect();\r\n            \r\n            canvas.width = parent.offsetWidth*(1/scale);\r\n            canvas.height = parent.offsetHeight*(1/scale);\r\n            \r\n            //centre about x=0, y=0\r\n            c.translate(canvas.width/2, canvas.height/2);\r\n            \r\n            setTimeout(resize, 100);\r\n        }\r\n\r\n        resize();\r\n        setTimeout(resize, 100);\r\n         \r\n         \r\n\r\n        // let initialTouchX = this.initialTouchPos.x - rect.left;\r\n        // let initialTouchY = this.initialTouchPos.y - rect.top;\r\n        //windowResize();\r\n\r\n\r\n\r\n        function rotateShape(angle, centre, points){\r\n            //console.log(angle, centre, points);\r\n            for(let i = 0; i < points.length; i++){\r\n                points[i] = [points[i][0]*Math.cos(angle) - points[i][1]*Math.sin(angle), points[i][0]*Math.sin(angle) + points[i][1]*Math.cos(angle)];\r\n                points[i][0] = centre[0] + points[i][0];\r\n                points[i][1] = centre[1] + points[i][1];\r\n            }\r\n            return points;\r\n        }\r\n\r\n        \r\n        function Ball(x, y, defaultRadius, dx, dy) {\r\n            this.x = x;\r\n            this.y = y;\r\n            this.radius = defaultRadius;\r\n            this.pathIndex = 0;\r\n            this.velocitySelect = false;\r\n            this.touchInterface = false;\r\n            this.timeSinceClick = 10;\r\n            this.buttonStep = 0.1;\r\n            this.arrowConfirmed = false;\r\n            let newPath = false;\r\n\r\n            if(dx == undefined || dy == undefined){\r\n                            //make all orbit in circular orbits in same direction initially \r\n                this.dx = 0;\r\n                this.dy = 0;\r\n\r\n                for(let i = 0; i < massCentres.length; i++){  \r\n                    this.dist = Math.pow(Math.pow(this.x-massCentres[i][0] , 2) + Math.pow(this.y-massCentres[i][1], 2), 0.5);\r\n                    this.dy += -initialVel*massCentres[i][2]*Math.abs(Math.pow(this.dist , -2))*(massCentres[i][0]-this.x);\r\n                }\r\n                for(let i = 0; i < massCentres.length; i++){\r\n                    this.dist = Math.pow(Math.pow(this.x-massCentres[i][0] , 2) + Math.pow(this.y-massCentres[i][1], 2), 0.5);\r\n                    this.dx += initialVel*massCentres[i][2]*Math.abs(Math.pow(this.dist , -2))*(massCentres[i][1]-this.y);\r\n                }\r\n            } else {\r\n                this.dx = dx;\r\n                this.dy = dy;\r\n            }\r\n\r\n            this.path = function(dx, dy)  {\r\n                let currentPos = [this.x, this.y];\r\n                let currentVel = [this.dx, this.dy];\r\n                console.log(this.velocitySelect);\r\n                if(this.velocitySelect || newPath){\r\n                    if(isNaN(dx) || isNaN(dy)){\r\n                        currentVel = [this.x, this.y];\r\n                    } else {\r\n                        currentVel = [dx, dy];\r\n                    }\r\n                } else {      \r\n                    this.pathVels = [];\r\n                    this.pathCoords = [];\r\n                    this.scale = 1;\r\n                }\r\n                let iterations = 0;\r\n                this.newCoords = [];\r\n                this.newVels = [];\r\n                let stepSize = 1;\r\n                this.closedPath = true;\r\n                let reverseMultiplier = 1;\r\n                this.maxIterations = 20000;\r\n                console.log('path drawing');\r\n\r\n                while(Math.pow((Math.pow(this.x-currentPos[0], 2) + Math.pow(this.y-currentPos[1],2)),0.5) > 1 || iterations < 100){\r\n\r\n                    currentPos[0] += currentVel[0] * reverseMultiplier * stepSize;\r\n                    currentPos[1] += currentVel[1] * reverseMultiplier * stepSize;\r\n\r\n                    for(let i = 0; i < massCentres.length; i++){\r\n                        let dist = Math.pow(Math.pow(currentPos[0]-massCentres[i][0] , 2) + Math.pow(currentPos[1]-massCentres[i][1], 2), 0.5);\r\n\r\n                        currentVel[0] = currentVel[0] + reverseMultiplier * massCentres[i][2]*Math.abs(Math.pow(dist , -3))*(massCentres[i][0]-currentPos[0]);\r\n                        currentVel[1] = currentVel[1] + reverseMultiplier * massCentres[i][2]*Math.abs(Math.pow(dist , -3))*(massCentres[i][1]-currentPos[1]);\r\n                    }\r\n\r\n                    if (this.closedPath){\r\n                        if(this.velocitySelect || newPath){\r\n                            this.newCoords.push(currentPos.slice());\r\n                            this.newVels.push(currentVel.slice());\r\n                        } else{\r\n                            this.pathCoords.push(currentPos.slice());\r\n                            this.pathVels.push(currentVel.slice());\r\n                        }\r\n                    } else{\r\n                        if(this.velocitySelect || newPath){\r\n                            this.newCoords.unshift(currentPos.slice());\r\n                            this.newVels.unshift(currentVel.slice());\r\n                        } else{\r\n                            this.pathCoords.unshift(currentPos.slice());\r\n                            this.pathVels.unshift(currentVel.slice());\r\n                        }\r\n                    }\r\n\r\n                    iterations += 1;\r\n                    \r\n                    //Draw reverse path for open path\r\n                    if(iterations > this.maxIterations || Math.pow(Math.pow(currentPos[0],2) + Math.pow(currentPos[1],2),0.5) < vm.sunRadius){\r\n                        this.maxIterations = iterations;\r\n                        this.closedPath = false;\r\n                        if(this.velocitySelect || newPath){\r\n                            currentPos = [this.x, this.y];\r\n                            currentVel = [dx, dy];\r\n                        } else {\r\n                            currentPos = [this.x, this.y];\r\n                            currentVel = [this.dx, this.dy];\r\n                        }\r\n                        iterations = 0;\r\n                        \r\n                        if(reverseMultiplier < 0){\r\n                            break;\r\n                        }\r\n\r\n                        reverseMultiplier = -1;\r\n                        console.log('reverse');\r\n                    }\r\n\r\n                }\r\n\r\n                \r\n                \r\n                //Call scaling method\r\n                for(let i = 0; i < 5; i++){  \r\n                    this.scaleCanvas();\r\n                }\r\n                resize();\r\n                \r\n                newPath = false;\r\n\r\n\r\n                //Find max radius of path\r\n                let maxRadius = 0;\r\n                let minRadius = 10000000;\r\n                \r\n                if(this.newCoords.length > 0){\r\n                    for(let i = 0; i <this.newCoords.length; i++){\r\n                        let dist = Math.pow(Math.pow(this.newCoords[i][0],2)+Math.pow(this.newCoords[i][1],2),0.5);\r\n                        if(dist > maxRadius){\r\n                            maxRadius = dist;\r\n                        }\r\n                        if(dist < minRadius){\r\n                            minRadius = dist;\r\n                        }\r\n                    }\r\n                } else {\r\n                    for(let i = 0; i <this.pathCoords.length; i++){\r\n                        let dist = Math.pow(Math.pow(this.pathCoords[i][0],2)+Math.pow(this.pathCoords[i][1],2),0.5);\r\n                        if(dist > maxRadius){\r\n                            maxRadius = dist;\r\n                        }\r\n                        if(dist < minRadius){\r\n                            minRadius = dist;\r\n                        }\r\n                    }\r\n                }\r\n            \r\n                vm.$emit('path-update', [currentPos, currentVel, maxRadius, minRadius]);\r\n            }\r\n\r\n            this.scaleCanvas = function() {\r\n                // Scaling\r\n                let maxX = this.pathCoords[0][0];\r\n                let maxY = this.pathCoords[0][1];\r\n                let minX = this.pathCoords[0][0];\r\n                let minY = this.pathCoords[0][1];\r\n\r\n                if(this.newCoords.length > 0){\r\n                    maxX = this.newCoords[0][0];\r\n                    maxY = this.newCoords[0][1];\r\n                    minX = this.newCoords[0][0];\r\n                    minY = this.newCoords[0][1];\r\n\r\n                    for (let i = 0; i < this.newCoords.length; i++) {\r\n                        let coord = this.newCoords[i]\r\n\r\n                        if (coord[0] > maxX) {\r\n                            maxX = coord[0];\r\n                        }\r\n                        else if (coord[0] < minX) {\r\n                            minX = coord[0];\r\n                        }\r\n\r\n                        if (coord[1] > maxY) {\r\n                            maxY = coord[1];\r\n                        }\r\n                        else if (coord[1] < minY) {\r\n                            minY = coord[1];\r\n                        }\r\n                    }\r\n                } else{\r\n                    maxX = this.pathCoords[0][0];\r\n                    maxY = this.pathCoords[0][1];\r\n                    minX = this.pathCoords[0][0];\r\n                    minY = this.pathCoords[0][1];\r\n\r\n                    for (let i = 0; i < this.pathCoords.length; i++) {\r\n                        let coord = this.pathCoords[i]\r\n\r\n                        if (coord[0] > maxX) {\r\n                            maxX = coord[0];\r\n                        }\r\n                        else if (coord[0] < minX) {\r\n                            minX = coord[0];\r\n                        }\r\n\r\n                        if (coord[1] > maxY) {\r\n                            maxY = coord[1];\r\n                        }\r\n                        else if (coord[1] < minY) {\r\n                            minY = coord[1];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if(maxX < canvas.width*(1/this.scale)/4 && maxY < canvas.height*(1/this.scale)/4 && minX > -canvas.width*(1/this.scale)/4 && minY > -canvas.height*(1/this.scale)/4){\r\n                    //console.log('downsize', maxX, minX, canvas.width*(1/this.scale)/4, maxY, minY, canvas.height*(1/this.scale)/4);\r\n                    //unscale\r\n                    c.scale((1/this.scale), (1/this.scale));\r\n                    // c.translate(canvas.width/4, canvas.height/4);\r\n                    this.scale = this.scale*2;\r\n                    //c.scale(this.scale, this.scale); rescale done by resize()\r\n                }else if(maxX > canvas.width*(1/this.scale)/2 || maxY > canvas.height*(1/this.scale)/2 || minX < -canvas.width*(1/this.scale)/2 || minY < -canvas.height*(1/this.scale)/2){\r\n                    //console.log('upsize', maxX, minX, canvas.width*(1/this.scale)/4, maxY, minY, canvas.height*(1/this.scale)/4);\r\n                    //unscale\r\n                    c.scale((1/this.scale), (1/this.scale));\r\n                    // c.translate(canvas.width/4, canvas.height/4);\r\n                    this.scale = this.scale/2;\r\n                    //c.scale(this.scale, this.scale); rescale done by resize()\r\n                }\r\n                \r\n                scale = this.scale;\r\n                resize();\r\n            }\r\n\r\n            this.draw = function() {\r\n                this.radius = defaultRadius*(1/this.scale);\r\n                let arrowOffset = this.radius*3;\r\n\r\n                c.beginPath();\r\n                c.moveTo(this.pathCoords[0][0], this.pathCoords[0][1]);\r\n                for(let i = 1; i < this.pathCoords.length; i++){\r\n                    c.lineTo(this.pathCoords[i][0], this.pathCoords[i][1]);\r\n                }\r\n                if(this.closedPath){\r\n                    c.lineTo(this.pathCoords[0][0], this.pathCoords[0][1]);\r\n                }\r\n                c.lineWidth = 2*(1/this.scale);\r\n                c.strokeStyle = \"black\";\r\n                c.stroke();\r\n\r\n                if(this.velocitySelect && this.newCoords.length > 0){\r\n                    c.beginPath();\r\n                    c.moveTo(this.newCoords[0][0], this.newCoords[0][1]);\r\n                    for(let i = 1; i < this.newCoords.length; i++){\r\n                        c.lineTo(this.newCoords[i][0], this.newCoords[i][1]);\r\n                    }\r\n                    if(this.closedPath){\r\n                        c.lineTo(this.newCoords[0][0], this.newCoords[0][1]);\r\n                    }\r\n                    c.lineWidth = 2*(1/this.scale);\r\n                    c.strokeStyle = \"blue\";\r\n                    c.stroke();\r\n                }\r\n\r\n                c.beginPath();\r\n                c.arc(this.x, this.y, this.radius, 0, 2*Math.PI);\r\n                c.fillStyle = 'rgb(0,0,255)';\r\n                c.fill();\r\n                \r\n                if(this.velocitySelect){\r\n                    c.beginPath();\r\n                    c.arc(this.x, this.y, this.radius*1.5, 0, 2*Math.PI);\r\n                    c.fillStyle = 'rgb(0,255,0)';\r\n                    c.fill();\r\n\r\n                    this.tanAngle = Math.atan2(this.pathCoords[this.pathIndex+1][1]- this.pathCoords[this.pathIndex-1][1], this.pathCoords[this.pathIndex+1][0]- this.pathCoords[this.pathIndex-1][0]);\r\n\r\n                    this.arrowCentres = [];\r\n                    for(let i = 0; i < 4; i++){\r\n                        this.arrowCentres.push([this.x + this.radius*4*Math.cos(this.tanAngle + i*Math.PI/2), this.y + this.radius*4*Math.sin(this.tanAngle + i*Math.PI/2)]);\r\n                    }\r\n\r\n                    this.tanPoints1 = rotateShape(this.tanAngle, [this.x, this.y], [[arrowOffset, this.radius], [this.radius*2+arrowOffset, this.radius], [this.radius*2+arrowOffset, this.radius*2], [this.radius*3+arrowOffset, 0],\r\n                    [this.radius*2+arrowOffset, -this.radius*2], [this.radius*2+arrowOffset, -this.radius], [arrowOffset, -this.radius]]);\r\n                    this.tanPoints2 = rotateShape(this.tanAngle + Math.PI, [this.x, this.y], [[arrowOffset, this.radius], [this.radius*2+arrowOffset, this.radius], [this.radius*2+arrowOffset, this.radius*2], [this.radius*3+arrowOffset, 0],\r\n                    [this.radius*2+arrowOffset, -this.radius*2], [this.radius*2+arrowOffset, -this.radius], [arrowOffset, -this.radius]]);\r\n                    this.rotPoints1 = rotateShape(this.tanAngle + Math.PI/2, [this.x, this.y], [[arrowOffset, this.radius], [this.radius*2+arrowOffset, this.radius], [this.radius*2+arrowOffset, this.radius*2], [this.radius*3+arrowOffset, 0],\r\n                    [this.radius*2+arrowOffset, -this.radius*2], [this.radius*2+arrowOffset, -this.radius], [arrowOffset, -this.radius]]);\r\n                    this.rotPoints2 = rotateShape(this.tanAngle + 3*Math.PI/2, [this.x, this.y], [[arrowOffset, this.radius], [this.radius*2+arrowOffset, this.radius], [this.radius*2+arrowOffset, this.radius*2], [this.radius*3+arrowOffset, 0],\r\n                    [this.radius*2+arrowOffset, -this.radius*2], [this.radius*2+arrowOffset, -this.radius], [arrowOffset, -this.radius]]);\r\n\r\n                    c.beginPath();\r\n                    c.moveTo(this.tanPoints1[0][0], this.tanPoints1[0][1]);\r\n                    for(let i = 1; i < this.tanPoints1.length; i++){\r\n                        c.lineTo(this.tanPoints1[i][0], this.tanPoints1[i][1]);\r\n                    }\r\n                    c.fillStyle = 'blue';\r\n                    c.fill();\r\n\r\n                    c.beginPath();\r\n                    c.moveTo(this.tanPoints2[0][0], this.tanPoints2[0][1]);\r\n                    for(let i = 1; i < this.tanPoints2.length; i++){\r\n                        c.lineTo(this.tanPoints2[i][0], this.tanPoints2[i][1]);\r\n                    }\r\n                    c.fillStyle = 'blue';\r\n                    c.fill();\r\n\r\n\r\n                    c.beginPath();\r\n                    c.moveTo(this.rotPoints1[0][0], this.rotPoints1[0][1]);\r\n                    for(let i = 1; i < this.rotPoints1.length; i++){\r\n                        c.lineTo(this.rotPoints1[i][0], this.rotPoints1[i][1]);\r\n                    }\r\n                    c.fillStyle = 'purple';\r\n                    c.fill();\r\n\r\n                    c.beginPath();\r\n                    c.moveTo(this.rotPoints2[0][0], this.rotPoints2[0][1]);\r\n                    for(let i = 1; i < this.rotPoints2.length; i++){\r\n                        c.lineTo(this.rotPoints2[i][0], this.rotPoints2[i][1]);\r\n                    }\r\n                    c.fillStyle = 'purple';\r\n                    c.fill();\r\n                }\r\n\r\n                if(vm.touchSelect){\r\n                    // let dispX = currentTouchX - initialTouchX;\r\n                    // let dispY = currentTouchY - initialTouchY;\r\n                    this.mag = Math.pow(Math.pow(currentTouchX- this.x, 2) + Math.pow(currentTouchY-this.y, 2), 0.5);\r\n                    if(this.mag > this.radius*20){\r\n                        this.mag = this.radius*20;\r\n                    }\r\n\r\n                    this.arrowAngle = Math.atan2(currentTouchY - this.y, currentTouchX - this.x);\r\n\r\n                    this.arrowPoints = rotateShape(this.arrowAngle, [this.x, this.y], [[0,0], [this.mag, this.radius*2], [this.mag, this.radius*6], [this.mag + this.radius*6, 0],[this.mag, -this.radius*6] ,[this.mag, -this.radius*2]]);\r\n\r\n                    c.beginPath();\r\n                    c.moveTo(this.x, this.y);\r\n                    for(let i = 0; i < this.arrowPoints.length; i++){\r\n                        c.lineTo(this.arrowPoints[i][0], this.arrowPoints[i][1]);\r\n                    }\r\n                    c.fillStyle = 'rgba(0, 255, 0, 0.7)';\r\n                    c.fill();\r\n\r\n                    this.arrowConfirmed = true;\r\n                }\r\n            }\r\n\r\n            this.update = function() {\r\n\r\n                this.timeSinceClick += 1; \r\n                this.draw();\r\n\r\n                if(this.pathIndex >= this.pathCoords.length){\r\n                    this.pathIndex=1;\r\n                }\r\n                \r\n                if(!this.velocitySelect && !vm.touchSelect){\r\n                    this.x = this.pathCoords[this.pathIndex][0];\r\n                    this.y = this.pathCoords[this.pathIndex][1];\r\n                    this.dx = this.pathVels[this.pathIndex][0];\r\n                    this.dy = this.pathVels[this.pathIndex][1];\r\n                    this.pathIndex += vm.animationSpeed;\r\n                    vm.$emit('position-update', [this.x, this.y]);\r\n                }\r\n                \r\n                if(vm.velocitySelect && Math.pow((Math.pow((mouseX-this.x),2) + Math.pow((mouseY-this.y),2)),1/2) < this.radius*1.5 && this.timeSinceClick > 20){\r\n                    if(this.velocitySelect && this.newCoords.length > 0){\r\n                        this.pathCoords = this.newCoords;\r\n                        this.pathVels = this.newVels;\r\n                        this.newCoords = [];\r\n                        this.newVels = [];\r\n                        this.pathIndex = 1; \r\n                    }\r\n\r\n                    this.timeSinceClick = 0;\r\n                    this.velocitySelect = !this.velocitySelect;\r\n                }\r\n                \r\n                if(this.velocitySelect){\r\n                    // if(ballArray.length = 1){\r\n                    //     ballArray.push(new Ball(canvas.width/3, canvas.height/3, 10, undefined, undefined));\r\n                    //     //console.log(ballArray);\r\n                    // }\r\n                    for(let i = 0; i < this.arrowCentres.length; i++){\r\n                        if(vm.velocitySelect && Math.pow((Math.pow((mouseX-this.arrowCentres[i][0]),2) + Math.pow((mouseY-this.arrowCentres[i][1]),2)),1/2) < this.radius*2 && this.timeSinceClick > 20){\r\n                            this.timeSinceClick = 0;\r\n                            if(i == 0){\r\n                                console.log('tangential out'); \r\n                                this.newdx += this.buttonStep * Math.cos(this.tanAngle);\r\n                                this.newdy += this.buttonStep * Math.sin(this.tanAngle);\r\n                            }\r\n                            if(i == 1){\r\n                                console.log('radial in');\r\n                                this.newdx += this.buttonStep * Math.sin(this.tanAngle);\r\n                                this.newdy += this.buttonStep * Math.cos(this.tanAngle);\r\n                            }\r\n                            if(i == 2){\r\n                                console.log('tangential in');\r\n                                this.newdx += -this.buttonStep * Math.cos(this.tanAngle);\r\n                                this.newdy += -this.buttonStep * Math.sin(this.tanAngle);\r\n                            }\r\n                            if(i == 3){\r\n                                console.log('radial out');\r\n                                this.newdx += -this.buttonStep * Math.sin(this.tanAngle);\r\n                                this.newdy += -this.buttonStep * Math.cos(this.tanAngle);\r\n                            }\r\n                            console.log('arrow Press');\r\n                            this.path(this.newdx, this.newdy);\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.newdx = this.dx;\r\n                    this.newdy = this.dy;\r\n                }\r\n\r\n                //Change velocity and draw new path when touch released\r\n                if(!vm.touchSelect && this.arrowConfirmed){\r\n                    this.newdx = this.dx + (Math.cos(this.arrowAngle)) * (0.0005*this.mag/this.radius*20);\r\n                    this.newdy = this.dy + (Math.sin(this.arrowAngle)) * (0.0005*this.mag/this.radius*20);\r\n                    \r\n                    newPath = true;\r\n                    this.newCoords = [];\r\n                    this.newVels = [];\r\n                    this.path(this.newdx, this.newdy);;\r\n\r\n                    if(this.newCoords.length > 0){\r\n                        this.pathCoords = this.newCoords;\r\n                        this.pathVels = this.newVels;\r\n                        if(this.closedPath){\r\n                            this.pathIndex = 1; \r\n                        } else{\r\n                            this.pathIndex = Math.round(this.pathCoords.length/2);\r\n                        }\r\n                    }\r\n\r\n                    this.arrowConfirmed = false;\r\n                }\r\n            }\r\n        }\r\n        \r\n        //let maxRadius = 30;\r\n        //let mouseRadius = 55;\r\n        let ballArray = [];\r\n\r\n        // [[x,y, mass]]\r\n        //let massCentres = [[canvas.width/3, canvas.height/3], [2*canvas.width/3, canvas.height/3], [canvas.width/2, 2*canvas.height/3]];\r\n        let massCentres = [[0, 0 , 100]];\r\n        let initialVel = 1;\r\n\r\n        ballArray.push(new Ball(canvas.width/5, canvas.height/5, 5, undefined, undefined));\r\n        for(let i = 0; i < ballArray.length; i++){\r\n            ballArray[i].path();\r\n        }\r\n\r\n        function animate() {\r\n            requestAnimationFrame(animate);\r\n\r\n            for (let i = 0; i < ballArray.length; i++){\r\n\r\n                // If statement fixes bug of rect not fully clearing when scale small\r\n                if(1/ballArray[i].scale >= 1){\r\n                c.clearRect(-canvas.width*(1/ballArray[i].scale)/2, -canvas.height*(1/ballArray[i].scale)/2, canvas.width*(1/ballArray[i].scale), canvas.height*(1/ballArray[i].scale));\r\n                } else{\r\n                    c.clearRect(-canvas.width/2, -canvas.height/2, canvas.width, canvas.height);\r\n                }\r\n                \r\n                //bounding box\r\n                // c.beginPath();\r\n                // c.moveTo(-canvas.width*(1/ballArray[i].scale)/2, -canvas.height*(1/ballArray[i].scale)/2);\r\n                // c.lineTo(canvas.width*(1/ballArray[i].scale)/2, -canvas.height*(1/ballArray[i].scale)/2);\r\n                // c.lineTo(canvas.width*(1/ballArray[i].scale)/2, canvas.height*(1/ballArray[i].scale)/2);\r\n                // c.lineTo(-canvas.width*(1/ballArray[i].scale)/2, canvas.height*(1/ballArray[i].scale)/2);\r\n                // c.lineTo(-canvas.width*(1/ballArray[i].scale)/2, -canvas.height*(1/ballArray[i].scale)/2);\r\n                // c.lineWidth = 1;\r\n                // c.stroke();\r\n            }\r\n\r\n            mouseX = (vm.mouse.x - rect.left)*(1/ballArray[0].scale) - canvas.width/2;\r\n            mouseY = (vm.mouse.y - rect.top )*(1/ballArray[0].scale) - canvas.height/2;\r\n            currentTouchX = (vm.currentTouchPos.x - rect.left)*(1/ballArray[0].scale) - canvas.width/2;\r\n            currentTouchY = (vm.currentTouchPos.y - rect.top)*(1/ballArray[0].scale) - canvas.height/2;\r\n            // initialTouchX = (vm.initialTouchPos.x - rect.left - canvas.width/2)*(1/ballArray[0].scale);\r\n            // initialTouchY = (vm.initialTouchPos.y - rect.top - canvas.height/2)*(1/ballArray[0].scale);\r\n\r\n            for (let i = 0; i < ballArray.length; i++){\r\n                ballArray[i].update();\r\n            }\r\n\r\n            for (let i = 0; i <massCentres.length; i++){\r\n                c.beginPath();\r\n                c.arc(massCentres[i][0], massCentres[i][1], vm.sunRadius, 0, Math.PI * 2); \r\n                c.fillStyle = 'Orange';\r\n                c.fill();\r\n            }\r\n\r\n            // c.beginPath();\r\n            // c.arc(mouseX, mouseY, 20, 0, Math.PI * 2);\r\n            // c.fillStyle = \"black\";\r\n            // c.fill();\r\n            \r\n            // c.beginPath();\r\n            // c.arc(2316, 669, 500, 0, Math.PI * 2); \r\n            // c.fillStyle = 'Red';\r\n            // c.fill();\r\n            \r\n        }\r\n\r\n        animate();\r\n\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n#front-animation{\r\n    /* border: 1px solid black; */\r\n}\r\n</style>"],"sourceRoot":"src/components"}]}